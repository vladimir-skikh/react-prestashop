{"version":3,"sources":["componets/common/Pagination/Pagination.module.css","componets/common/Preloader/Preloader.module.css","componets/OrderHistory/OrderHistory.module.css","api/api.js","redux/reducers/indexReducer.js","redux/reduxStore.js","componets/OrderHistory/OrderHistory.jsx","componets/OrderHistory/OrderHistoryContainer.jsx","componets/common/Pagination/Pagination.jsx","img/loader.svg","componets/common/Preloader/Preloader.jsx","componets/HistoryTable/HistoryTable.jsx","componets/HistoryTable/HistoryTableContainer.jsx","App.js","reportWebVitals.js","index.js","componets/HistoryTable/HistoryTable.module.css"],"names":["module","exports","instanceModule","axios","create","withCredentials","baseURL","prestashopAPI","getOrdersHistories","a","getParams","params","get","then","response","data","updateComment","id_order_history","comment","postParams","put","SET_INITIALIZED","SET_ORDERS_HISTORIES","SET_TOTAL_ORDER_HISTORIES","SET_TOTAL_PAGES","ONCHANGE_CURRENT_PAGE","SET_IF_FETCHING","SET_SORT","initialState","initialized","table_columns","name","label","filter","table_name","filter_condition","order_histories","total_order_histories","undefined","total_pages","current_page","count","sort","orderby","orderway","isFetching","indexReducer","stateCopy","state","action","type","total_number","setInitializedCreator","setTotalPagesActionCreator","setIsFetchingActionCreator","setSortActionCreator","setOrdersHistoriesThunkCreator","dispatch","Math","ceil","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","OrderHistory","employee","state_name","old_state_name","id_order","date_add","odd_even","className","classnames","styles","orderHistoryRow","id","cell","onClick","data-id-order-history","lastCell","connect","ownProps","order_history","Pagination","updateData","currentPage","totalPages","paginationStart","paginationEnd","onChangeCurrentPage","pageNum","pages","i","push","style","pagination","paginationList","paginationListItem","hidden","slice","map","page","paginationListItemCurrent","length","Preloader","preloader","src","loader","alt","preloaderImage","HistoryTable","changeSort","e","target","dataset","sortFilter","tableName","sortName","sortWay","props","this","historyTable","tableHeader","column","index","headerCell","headerCellActive","headerCellText","data-table-name","data-sort-filter","data-sort-name","data-sort-way","sortButton","sortAsc","sortDesc","OrderHistoryContainer","React","Component","HistoryTableApiContainer","onChangeSort","actionCreators","page_num","offset","parseInt","updateOrderHistories","Promise","all","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","reason","initializeApp","window","addEventListener","removeEventListener","isInitialized","HistoryTableContainer","setOrdersHistories","AppContainer","MainApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.408864f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__q_MPa\",\"paginationList\":\"Pagination_paginationList__2WQyc\",\"paginationListItem\":\"Pagination_paginationListItem__32lIT\",\"paginationListItemCurrent\":\"Pagination_paginationListItemCurrent__CMMw5\",\"hidden\":\"Pagination_hidden__1Yhht\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationListItemCurrent\":\"Preloader_paginationListItemCurrent__23JwV\",\"preloader\":\"Preloader_preloader__25UOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderHistoryRow\":\"OrderHistory_orderHistoryRow__3BJzk\",\"cell\":\"OrderHistory_cell__1U2tn\",\"lastCell\":\"OrderHistory_lastCell__3VCT0\"};","import axios from 'axios';\r\n\r\n/**\r\n * prestashop web service API key\r\n */ \r\n//const api_key = 'LCVMKBTLRB8XP7NKT4C4QMP361IWKR8X';\r\n\r\n/* const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://strategshop/api/',\r\n    params: {\r\n        ws_key: api_key,\r\n        io_format: 'JSON',\r\n    },\r\n}); */\r\n\r\nconst instanceModule = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://strategshop/module/pworderhistories/orderhistories',\r\n})\r\n\r\nexport const prestashopAPI = {\r\n\r\n    getOrdersHistories: async (getParams = {}) => {\r\n        const params = {\r\n            'method': 'getOrderHistories',\r\n            'limit': getParams['limit'] ? getParams['limit'] : 20,\r\n            'display': 'full',\r\n            'sort': getParams['sort'] ? getParams['sort'] : '[main|id_order_history-DESC]',\r\n            'filter[main|id_employee]': `![0]`\r\n        };\r\n\r\n        return instanceModule.get(``, {params: params}).then( response => {\r\n            return response.data;\r\n        });\r\n    },\r\n\r\n    updateComment: async (id_order_history, comment) => {\r\n        let postParams = {\r\n            'method': 'updateComment',\r\n            'id_order_history': id_order_history,\r\n            'commnet': comment,\r\n        }\r\n        return instanceModule.put(``, postParams).then( response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}","import { prestashopAPI } from \"../../api/api\";\r\n\r\nconst SET_INITIALIZED = 'react-prestashop/indexReducer/SET-INIT-APP';\r\nconst SET_ORDERS_HISTORIES = 'react-prestashop/indexReducer/SET-ORDERS-HISTORIES';\r\nconst SET_TOTAL_ORDER_HISTORIES = 'react-prestashop/indexReducer/SET-TOTAL-ORDER-HISTORIES';\r\nconst SET_TOTAL_PAGES = 'react-prestashop/indexReducer/SET-TOTAL-PAGES';\r\nconst ONCHANGE_CURRENT_PAGE = 'react-prestashop/indexReducer/ONCHANGE-CURRENT-PAGE';\r\nconst SET_IF_FETCHING = 'react-prestashop/indexReducer/SET-IS-FETCHING';\r\nconst SET_SORT = 'react-prestashop/indexReducer/SET-SORT';\r\n\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n    table_columns: [\r\n        {\r\n            name: 'id_order_history',\r\n            label: 'ID',\r\n            filter: true,\r\n            table_name: 'main'\r\n        },\r\n        {\r\n            name: 'id_order',\r\n            label: 'ID заказа',\r\n            filter: true,\r\n            table_name: 'main'\r\n        },\r\n        {\r\n            name: 'old_state_name',\r\n            label: 'Старый статус',\r\n            filter: false,\r\n            table_name: 'osl',\r\n        },\r\n        {\r\n            name: 'state_name',\r\n            label: 'Новый статус',\r\n            filter: true,\r\n            table_name: 'nothing',\r\n        },\r\n        {\r\n            name: 'comment',\r\n            label: 'Причина изменения',\r\n            filter: true,\r\n            filter_condition: 'like',\r\n            table_name: 'main'\r\n        },\r\n        {\r\n            name: 'employee',\r\n            label: 'Пользователь',\r\n            filter: true,\r\n            table_name: 'nothing',\r\n        },\r\n        {\r\n            name: 'date_add',\r\n            label: 'Дата изменения',\r\n            filter: true,\r\n            table_name: 'main',\r\n        },\r\n    ],\r\n    order_histories: [],\r\n    total_order_histories: undefined,\r\n    total_pages: undefined,\r\n    current_page: 1,\r\n    count: 20,\r\n    sort: {\r\n        table_name: 'main',\r\n        orderby: 'id_order_history',\r\n        orderway: 'DESC'\r\n    },\r\n    isFetching: false,\r\n}\r\n\r\nexport const indexReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED: {\r\n            stateCopy = {\r\n                ...state,\r\n                initialized: action.initialized\r\n            }\r\n            break;\r\n        }\r\n        case SET_ORDERS_HISTORIES: {\r\n            stateCopy = {\r\n                ...state,\r\n                order_histories: [...action.order_histories]\r\n            }\r\n            break;\r\n        }\r\n        case SET_TOTAL_ORDER_HISTORIES: {\r\n            stateCopy = {\r\n                ...state,\r\n                total_order_histories: action.total_number\r\n            }\r\n            break;\r\n        }\r\n        case ONCHANGE_CURRENT_PAGE: {\r\n            stateCopy = {\r\n                ...state,\r\n                current_page: action.current_page\r\n            }\r\n            break; \r\n        }\r\n        case SET_IF_FETCHING: {\r\n            stateCopy = {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n            break; \r\n        }\r\n        case SET_TOTAL_PAGES: {\r\n            stateCopy = {\r\n                ...state,\r\n                total_pages: action.total_pages\r\n            }\r\n            break; \r\n        }\r\n        case SET_SORT: {\r\n            stateCopy = {\r\n                ...state,\r\n                sort: {...action.sort}\r\n            }\r\n            break; \r\n        }\r\n        default:\r\n            stateCopy = {...state};\r\n    }\r\n\r\n    return stateCopy;\r\n}\r\n\r\nexport default indexReducer;\r\n\r\n/** Action creators */\r\nexport const setOrdersHistoriesActionCreator = (order_histories) => ({type: SET_ORDERS_HISTORIES, order_histories: order_histories});\r\nexport const setInitializedCreator = () => ({type: SET_INITIALIZED, initialized: true});\r\nexport const setTotalOrderHistoriesActionCreator = (total_number) => ({type: SET_TOTAL_ORDER_HISTORIES, total_number: total_number});\r\nexport const setTotalPagesActionCreator = (total_pages) => ({type: SET_TOTAL_PAGES, total_pages: total_pages});\r\nexport const onChangeCurrentPageActionCreator = (current_page) => ({type: ONCHANGE_CURRENT_PAGE, current_page: current_page});\r\nexport const setIsFetchingActionCreator = (isFetching) => ({type: SET_IF_FETCHING, isFetching: isFetching});\r\nexport const setSortActionCreator = (sort) => ({type: SET_SORT, sort: sort});\r\n/** ---------------- */\r\n\r\n/** Thunk creators */\r\nexport const setOrdersHistoriesThunkCreator = (getParams, count) => async (dispatch) => {\r\n    let response = await prestashopAPI.getOrdersHistories(getParams);\r\n    if (response.order_histories) {\r\n        dispatch(setOrdersHistoriesActionCreator(response.order_histories));\r\n\r\n        dispatch(setTotalOrderHistoriesActionCreator(response.count));\r\n        const total_pages = Math.ceil(response.count / count);\r\n        dispatch(setTotalPagesActionCreator(total_pages));\r\n    }\r\n}\r\n\r\nexport const updateOrderHistoriesThunkCreator = (page_num, count, sort) => async (dispatch) => {\r\n    const offset = parseInt((page_num - 1) * count - 1);\r\n    let getParams = {'limit': `${offset},${count}`}\r\n    if (parseInt(page_num) === 1) {\r\n        getParams = {'limit': `${count}`}\r\n    }\r\n    getParams['sort'] = `[${sort.table_name}|${sort.orderby}-${sort.orderway}]`;\r\n    dispatch(setIsFetchingActionCreator(true));\r\n\r\n    let updateOrderHistories = dispatch(setOrdersHistoriesThunkCreator(getParams, count));\r\n\r\n    Promise.all([updateOrderHistories]).then(() => {\r\n        dispatch(setIsFetchingActionCreator(false));\r\n        dispatch(onChangeCurrentPageActionCreator(page_num));\r\n    })\r\n}\r\n\r\nexport const setSortThunkCreator = (sort, page_num, count) => async (dispatch) => {\r\n    const offset = parseInt((page_num - 1) * count - 1);\r\n    let getParams = {'limit': `${offset},${count}`}\r\n    if (parseInt(page_num) === 1) {\r\n        getParams = {'limit': `${count}`}\r\n    }\r\n    getParams['sort'] = `[${sort.table_name}|${sort.orderby}-${sort.orderway}]`;\r\n    dispatch(setIsFetchingActionCreator(true));\r\n\r\n    let updateOrderHistories = dispatch(setOrdersHistoriesThunkCreator(getParams, count));\r\n\r\n    Promise.all([updateOrderHistories]).then(() => {\r\n        dispatch(setIsFetchingActionCreator(false));\r\n        dispatch(setSortActionCreator(sort));\r\n    })\r\n}\r\n/** ------------- */\r\n\r\nexport const initializeApp = (getParams = {}, count) => async (dispatch) => {\r\n    let setOrdersHistories =  dispatch(setOrdersHistoriesThunkCreator(getParams, count, true));\r\n\r\n    Promise.all([setOrdersHistories]).then(() => {\r\n        dispatch(setInitializedCreator());\r\n    })\r\n}\r\n\r\n\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport indexReducer from './reducers/indexReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nlet rootReducer = combineReducers({\r\n    indexReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport '../HistoryTable/HistoryTableComplex.css';\r\nimport styles from './OrderHistory.module.css';\r\nimport classnames from 'classnames';\r\nimport { prestashopAPI } from '../../api/api';\r\n\r\nconst OrderHistory = ({\r\n    id_order_history,\r\n    employee,\r\n    state_name,\r\n    old_state_name,\r\n    id_order,\r\n    comment,\r\n    date_add,\r\n    odd_even,\r\n}) => {\r\n\r\n    const updateComment = async () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className={classnames(odd_even, styles.orderHistoryRow)}>\r\n            <div className={classnames(styles.id, styles.cell)}>\r\n                {id_order_history}\r\n            </div>\r\n            <div className={classnames(styles.id, styles.cell)}>\r\n                {id_order}\r\n            </div>\r\n            <div className={classnames(styles.id, styles.cell)}>\r\n                {old_state_name}\r\n            </div>\r\n            <div className={classnames(styles.id, styles.cell)}>\r\n                {state_name}\r\n            </div>\r\n            <div className={classnames(styles.id, styles.cell)} onClick={updateComment} data-id-order-history={id_order_history}>\r\n                {comment}\r\n            </div>\r\n            <div className={classnames(styles.id, styles.cell)}>\r\n                {employee}\r\n            </div>\r\n            <div className={classnames(styles.id, styles.cell, styles.lastCell)}>\r\n                {date_add}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderHistory;","import React from 'react';\r\nimport OrderHistory from './OrderHistory';\r\nimport { connect } from 'react-redux';\r\n\r\nconst OrderHistoryAPI = ({\r\n    order_history,\r\n    odd_even\r\n}) => {\r\n    return (\r\n        <OrderHistory \r\n            id_order_history={order_history.id_order_history}\r\n            employee={order_history.employee}\r\n            state_name={order_history.state_name}\r\n            old_state_name={order_history.old_state_name}\r\n            id_order={order_history.id_order}\r\n            comment={order_history.comment}\r\n            date_add={order_history.date_add}\r\n            odd_even={odd_even}\r\n        />\r\n    ); \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        order_history: ownProps.order_history,\r\n        odd_even: ownProps.odd_even,\r\n    }\r\n}\r\nconst actionCreators = {}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(OrderHistoryAPI);","import React from \"react\";\r\nimport classnames from 'classnames';\r\nimport style from './Pagination.module.css';\r\n\r\nconst Pagination = ({\r\n    updateData,\r\n    count,\r\n    currentPage,\r\n    sort,\r\n    totalPages\r\n}) => {\r\n\r\n    let paginationStart = 0;\r\n    let paginationEnd = 7;\r\n    if (currentPage > 3) {\r\n        paginationStart = currentPage - 3;\r\n        paginationEnd = currentPage + 2;\r\n    }\r\n\r\n    let onChangeCurrentPage = (pageNum) => {\r\n        updateData(pageNum, count, sort);\r\n    }\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className={style.pagination}>\r\n            <ul className={style.paginationList}>\r\n                <li \r\n                    className={classnames(style.paginationListItem, {[style.hidden]: currentPage === 1})}\r\n                    onClick={()=> {onChangeCurrentPage(1)}}\r\n                >\r\n                    ⋘\r\n                </li>\r\n                {   \r\n                    pages.slice(paginationStart, paginationEnd).map( page => (\r\n                        <li \r\n                            className={style.paginationListItem + ' ' + (currentPage === page ? style.paginationListItemCurrent : '')}\r\n                            onClick={()=> {onChangeCurrentPage(page)}}\r\n                        >\r\n                            {page}\r\n                        </li>\r\n                    ))\r\n                }\r\n                <li \r\n                    className={style.paginationListItem + ' ' + (currentPage === pages.length ? style.hidden : '')}\r\n                    onClick={()=> {onChangeCurrentPage(pages.length)}}\r\n                >\r\n                    ⋙\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","export default __webpack_public_path__ + \"static/media/loader.04f3b828.svg\";","import React from 'react';\r\nimport style from './Preloader.module.css'\r\nimport loader from '../../../img/loader.svg';\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={style.preloader}>\r\n            <img\r\n                src={loader}\r\n                alt=\"Loading...\"\r\n                className={style.preloaderImage}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport OrderHistoryContainer from '../OrderHistory/OrderHistoryContainer';\r\nimport './HistoryTableComplex.css';\r\nimport styles from './HistoryTable.module.css';\r\nimport Pagination from '../common/Pagination/Pagination';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nclass HistoryTable extends React.Component {\r\n    changeSort = (e) => {\r\n        const filter = e.target.dataset.sortFilter;\r\n        if (!!filter) {\r\n            const table_name = e.target.dataset.tableName;\r\n            const orderby = e.target.dataset.sortName;\r\n            const orderway = e.target.dataset.sortWay;\r\n\r\n            const sort = {\r\n                table_name: table_name,\r\n                orderby: orderby,\r\n                orderway: orderway,\r\n            }\r\n\r\n            this.props.changeSort(sort, this.props.current_page, this.props.count);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isFetching) {\r\n            return (\r\n                <Preloader/>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <div className={classnames(styles.historyTable)}>\r\n                    <div className={styles.tableHeader}>\r\n                        {\r\n                            this.props.table_columns.map( (column, index) => {\r\n                                return(\r\n                                    <div className={classnames(\r\n                                        styles.headerCell, \r\n                                        {[styles.headerCellActive]: this.props.sort.orderby === column.name}, \r\n                                        {[styles.lastCell]: this.props.table_columns.length - 1 === index}\r\n                                    )}>\r\n                                        <div \r\n                                            key={index}\r\n                                            className={classnames(styles.headerCellText)}\r\n                                            data-table-name={column.table_name}\r\n                                            data-sort-filter={column.filter ? column.filter : false}\r\n                                            data-sort-name={column.name}\r\n                                            data-sort-way={this.props.sort.orderby === column.name && this.props.sort.orderway === 'ASC' ? 'DESC' : 'ASC' }\r\n                                            onClick={this.changeSort}\r\n                                        >\r\n                                            {column.label}\r\n                                            {\r\n                                                column.filter \r\n                                                ? <div className={classnames(\r\n                                                        styles.sortButton, \r\n                                                        {\r\n                                                            [styles.sortAsc]: this.props.sort.orderby === column.name && this.props.sort.orderway === 'ASC', \r\n                                                            [styles.sortDesc]: this.props.sort.orderby === column.name && this.props.sort.orderway === 'DESC'\r\n                                                        },\r\n                                                    )}\r\n                                                >▼</div> \r\n                                                : ''\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    {\r\n                        this.props.order_histories.map( (order_history, index) => {\r\n                            return(\r\n                                <OrderHistoryContainer \r\n                                    key={order_history.id}\r\n                                    order_history={order_history} \r\n                                    odd_even={index % 2 === 0? 'even' : 'odd'} \r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <Pagination \r\n                    updateData={this.props.updateData}\r\n                    count={this.props.count}\r\n                    currentPage={this.props.current_page}\r\n                    totalPages={this.props.total_pages}\r\n                    sort={this.props.sort}\r\n                />\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default HistoryTable;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HistoryTable from './HistoryTable';\r\nimport { updateOrderHistoriesThunkCreator, setSortThunkCreator } from '../../redux/reducers/indexReducer';\r\n\r\nclass HistoryTableApiContainer extends React.Component {\r\n\r\n    onChangeSort = (sort,current_page,count) => {\r\n        this.props.changeSort(sort, current_page, count);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <HistoryTable \r\n                table_columns={this.props.table_columns}\r\n                order_histories={this.props.order_histories}\r\n                current_page={this.props.current_page}\r\n                total_pages={this.props.total_pages}\r\n                count={this.props.count}\r\n                sort={this.props.sort}\r\n                isFetching={this.props.isFetching}\r\n                changeSort={this.onChangeSort}\r\n                updateData={this.props.updateData}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        table_columns: state.indexReducer.table_columns,\r\n        order_histories: state.indexReducer.order_histories,\r\n        current_page: state.indexReducer.current_page,\r\n        total_pages: state.indexReducer.total_pages,\r\n        count: state.indexReducer.count,\r\n        sort: state.indexReducer.sort,\r\n        isFetching: state.indexReducer.isFetching,\r\n    }\r\n}\r\nconst actionCreators = {\r\n    updateData: updateOrderHistoriesThunkCreator,\r\n    changeSort: setSortThunkCreator,\r\n}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(HistoryTableApiContainer);","import React from 'react';\nimport store from \"./redux/reduxStore\";\nimport  { initializeApp } from './redux/reducers/indexReducer';\nimport { connect, Provider } from 'react-redux';\nimport HistoryTableContainer from './componets/HistoryTable/HistoryTableContainer';\nimport Preloader from \"./componets/common/Preloader/Preloader\";\n\n\nclass App extends React.Component {\n\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\n        alert(promiseRejectionEvent.reason);\n    }\n\n    componentDidMount() {\n        const getParams = {\n            'limit': this.props.count,\n            'sort': `[${this.props.sort.table_name}|${this.props.sort.orderby}-${this.props.sort.orderway}]`,\n        }        \n\n        this.props.initializeApp(getParams, this.props.count);\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.isInitialized) {\n            return <Preloader />;\n        }\n        return (\n            <div>\n                <HistoryTableContainer />\n            </div>\n        );\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        isInitialized: state.indexReducer.initialized,\n        count: state.indexReducer.count,\n        sort: state.indexReducer.sort\n    }\n}\n\nlet actionCreators = {\n    initializeApp: initializeApp,\n}\n\nconst AppContainer =  connect(mapStateToProps, actionCreators)(App);\n\nconst MainApp = (props) => {\n    return (\n        <Provider store={store}>\n            <AppContainer store={store} />\n        </Provider>\n    )\n}\n\nexport default MainApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<MainApp/>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"historyTable\":\"HistoryTable_historyTable__2sGIp\",\"tableHeader\":\"HistoryTable_tableHeader__285qJ\",\"headerCell\":\"HistoryTable_headerCell__37PUS\",\"headerCellActive\":\"HistoryTable_headerCellActive__1CxO0\",\"headerCellText\":\"HistoryTable_headerCellText__1Hj3U\",\"lastCell\":\"HistoryTable_lastCell__2lddY\",\"sortButton\":\"HistoryTable_sortButton__3zyt5\",\"sortAsc\":\"HistoryTable_sortAsc__3rwoS\",\"sortDesc\":\"HistoryTable_sortDesc__3Cg0W\"};"],"sourceRoot":""}