{"version":3,"sources":["componets/common/Preloader/Preloader.module.css","componets/OrderHistory/OrderHistory.module.css","componets/common/FormControls/FormControls.module.css","componets/HistoryTable/HistoryTable.module.css","componets/common/Pagination/Pagination.module.css","api/api.js","utils/helpers/helperObject.js","redux/reducers/indexReducer.js","redux/reduxStore.js","componets/OrderHistory/OrderHistory.jsx","componets/OrderHistory/OrderHistoryContainer.jsx","componets/common/Pagination/Pagination.jsx","img/loader.svg","componets/common/Preloader/Preloader.jsx","img/search-icon.svg","img/search-icon-minus.svg","componets/common/FormControls/FormControls.jsx","componets/common/FilterModal/FilterModal.jsx","componets/HistoryTable/HistoryTable.jsx","componets/HistoryTable/HistoryTableContainer.jsx","App.js","reportWebVitals.js","index.js","componets/common/FilterModal/FilterModal.module.css"],"names":["module","exports","instanceModule","axios","create","baseURL","prestashopAPI","getOrdersHistories","a","getParams","params","get","then","response","data","updateComment","id_order_history","comment","postParams","put","updateObjectInArray","items","itemId","objPropName","newObjProp","map","item","parseInt","SET_INITIALIZED","SET_ORDERS_HISTORIES","SET_TOTAL_ORDER_HISTORIES","SET_TOTAL_PAGES","ONCHANGE_CURRENT_PAGE","SET_IF_FETCHING","SET_SORT","UPDATE_COMMENT","IS_FILTERS_USED","SET_FILTERS","initialState","initialized","table_columns","name","label","filter","table_name","type","filter_table","filter_column","filter_condition","order_histories","total_order_histories","undefined","total_pages","current_page","count","sort","orderby","orderway","isFetching","filters","isFiltersUsed","indexReducer","stateCopy","state","action","total_number","setInitializedCreator","setTotalPagesActionCreator","onChangeCurrentPageActionCreator","setIsFetchingActionCreator","setSortActionCreator","updateCommentActionCreator","setIsFiltersUsedActionCreator","setFiltersActionCreator","setOrdersHistoriesThunkCreator","dispatch","Math","ceil","Promise","reject","error_msg","getRequestParamsByFilters","form_data","fields","key","name_condition_arr","split","field","get_params_key","value","Object","keys","length","rootReducer","combineReducers","form","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","OrderHistory","employee","state_name","old_state_name","id_order","date_add","odd_even","useState","editMode","setEditMode","comment_value","setComment","activateCommentEditMode","className","classnames","styles","orderHistoryRow","idOrderHistory","cell","idOrder","oldStateName","stateName","TextField","autoFocus","commentInput","onBlur","onChange","commentText","onDoubleClick","onTouchStart","dateAdd","lastCell","actionCreators","response_update","affected_rows","connect","ownProps","order_history","Pagination","updateData","currentPage","totalPages","paginationStart","paginationEnd","onChangeCurrentPage","pageNum","pages","i","push","style","pagination","paginationList","paginationListItem","hidden","onClick","slice","page","paginationListItemCurrent","Preloader","preloader","src","loader","alt","preloaderImage","FromControl","children","formControlProps","formControl","wrapperClassName","Input","props","input","restProps","meta","inputClassName","FilterModalReduxForm","reduxForm","onManualSubmitForm","formSubmit","filterModal","index","modalInputBlock","modalInputLabel","modalInputsList","filterInputsList","Field","component","filterFormWrapper","filterFormInput","filterInputNumber","placeholder","filterInputDelimeter","formFooter","Button","size","view","width","filterSubmit","submit","setFilters","updateOrderHistories","all","unsetFilters","usedFilters","React","isModalOpen","setIsModalOpen","isFiltersEmpty","setIsFiltersEmpty","closeModal","SearchIcon","SearchIconMinus","Modal","isOpen","hasOverlay","onOverlayClick","modalWindow","modalHeader","modalTitle","modalFiltersEmpty","modalClose","modalBody","onSubmit","form_values","initialValues","HistoryTable","changeSort","e","target","dataset","sortFilter","tableName","sortName","sortWay","this","historyTable","tableTop","tableTopLabel","totalCount","tableTopActions","tableHeader","column","headerCell","headerCellActive","headerCellText","data-table-name","data-sort-filter","data-sort-name","data-sort-way","sortButton","sortAsc","sortDesc","OrderHistoryContainer","id","tableEmptyRow","Component","HistoryTableApiContainer","onChangeSort","page_num","offset","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","reason","initializeApp","window","addEventListener","removeEventListener","isInitialized","Theme","preset","presetGpnDefault","HistoryTableContainer","setOrdersHistories","AppContainer","MainApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,0BAA4B,6CAA6C,UAAY,+B,yCCAvGD,EAAOC,QAAU,CAAC,gBAAkB,sCAAsC,KAAO,2BAA2B,SAAW,+BAA+B,YAAc,kCAAkC,aAAe,qC,oBCArND,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,kBAAoB,wCAAwC,eAAiB,qCAAqC,cAAgB,oCAAoC,MAAQ,4BAA4B,KAAO,2BAA2B,aAAe,mCAAmC,iBAAmB,yC,mBCAvZD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,YAAc,kCAAkC,WAAa,iCAAiC,iBAAmB,uCAAuC,eAAiB,qCAAqC,SAAW,+BAA+B,WAAa,iCAAiC,QAAU,8BAA8B,SAAW,+BAA+B,SAAW,+BAA+B,cAAgB,oCAAoC,WAAa,iCAAiC,cAAgB,sC,yCCAxlBD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,eAAiB,mCAAmC,mBAAqB,uCAAuC,0BAA4B,8CAA8C,OAAS,6B,iMCM3PC,E,OAAiBC,EAAMC,OAAO,CAChCC,QAAQ,GAAD,OANI,sBAMJ,6CAGEC,EAAgB,CAEzBC,mBAAmB,WAAD,4BAAE,0CAAAC,EAAA,6DAAOC,EAAP,+BAAmB,GAC/BC,EAAS,CACT,OAAU,oBACV,MAASD,EAAS,MAAYA,EAAS,MAAY,GACnD,QAAW,OACX,KAAQA,EAAS,KAAWA,EAAS,KAAW,+BAChD,2BAA2B,QAG3BA,EAAS,UACTC,EAAM,2BAAOA,GAAWD,EAAS,SAC3B,aAAkB,GAXZ,kBAcTP,EAAeS,IAAf,GAAuB,CAACD,OAAQA,IAASE,MAAM,SAAAC,GAClD,OAAOA,EAASC,SAfJ,2CAAF,kDAAC,GAmBnBC,cAAc,WAAD,4BAAE,WAAOC,EAAkBC,GAAzB,eAAAT,EAAA,6DACPU,EAAa,CACb,OAAU,gBACV,iBAAoBF,EACpB,QAAWC,GAJJ,kBAMJf,EAAeiB,IAAf,GAAuBD,GAAYN,MAAM,SAAAC,GAC5C,OAAOA,EAASC,SAPT,2CAAF,qDAAC,IChCLM,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,KAAK,SAAAC,GACd,OAAIC,SAASD,EAAKH,MAAkBI,SAASL,GAC7B,2BACLI,GACAF,GAIJE,M,QCLTE,EAAkB,6CAClBC,EAAuB,qDACvBC,EAA4B,0DAC5BC,EAAkB,gDAClBC,EAAwB,sDACxBC,EAAkB,gDAClBC,EAAW,yCACXC,EAAiB,+CACjBC,EAAkB,gDAClBC,EAAc,4CAGdC,EAAe,CACjBC,aAAa,EACbC,cAAe,CACX,CACIC,KAAM,mBACNC,MAAO,KACPC,QAAQ,EACRC,WAAY,OACZC,KAAM,UAEV,CACIJ,KAAM,WACNC,MAAO,0CACPC,QAAQ,EACRC,WAAY,OACZC,KAAM,UAEV,CACIJ,KAAM,iBACNC,MAAO,4EACPC,QAAQ,EACRC,WAAY,OAEhB,CACIH,KAAM,aACNC,MAAO,sEACPC,QAAQ,EACRC,WAAY,UACZE,aAAc,MACdC,cAAe,OACfF,KAAM,QAEV,CACIJ,KAAM,UACNC,MAAO,oGACPC,QAAQ,EACRK,iBAAkB,OAClBJ,WAAY,OACZC,KAAM,QAEV,CACIJ,KAAM,WACNC,MAAO,2EACPC,QAAQ,EACRC,WAAY,UACZC,KAAM,QAEV,CACIJ,KAAM,WACNC,MAAO,kFACPC,QAAQ,EACRC,WAAY,OACZC,KAAM,SAGdI,gBAAiB,GACjBC,2BAAuBC,EACvBC,iBAAaD,EACbE,aAAc,EACdC,MAAO,GACPC,KAAM,CACFX,WAAY,OACZY,QAAS,mBACTC,SAAU,QAEdC,YAAY,EACZC,QAAS,GACTC,eAAe,GAoFJC,EAjFa,WAAmC,IAEvDC,EAFqBC,EAAiC,uDAAzBzB,EAAc0B,EAAW,uCAI1D,OAAQA,EAAOnB,MACX,KAAKjB,EACDkC,EAAS,2BACFC,GADE,IAELxB,YAAayB,EAAOzB,cAExB,MAEJ,KAAKV,EACDiC,EAAS,2BACFC,GADE,IAELd,gBAAgB,YAAKe,EAAOf,mBAEhC,MAEJ,KAAKnB,EACDgC,EAAS,2BACFC,GADE,IAELb,sBAAuBc,EAAOC,eAElC,MAEJ,KAAKjC,EACD8B,EAAS,2BACFC,GADE,IAELV,aAAcW,EAAOX,eAEzB,MAEJ,KAAKpB,EACD6B,EAAS,2BACFC,GADE,IAELL,WAAYM,EAAON,aAEvB,MAEJ,KAAK3B,EACD+B,EAAS,2BACFC,GADE,IAELX,YAAaY,EAAOZ,cAExB,MAEJ,KAAKlB,EACD4B,EAAS,2BACFC,GADE,IAELR,KAAK,eAAKS,EAAOT,QAErB,MAEJ,KAAKpB,EACD2B,EAAS,2BACFC,GADE,IAELd,gBAAiB7B,EAAoB2C,EAAMd,gBAAiBe,EAAOhD,iBAAkB,mBAAoB,CAACC,QAAS+C,EAAO/C,YAE9H,MAEJ,KAAKmB,EACD0B,EAAS,2BACFC,GADE,IAELH,cAAeI,EAAOJ,gBAE1B,MAEJ,KAAKvB,EACDyB,EAAS,2BACFC,GADE,IAELJ,QAAQ,eAAKK,EAAOL,WAExB,MAEJ,QACIG,EAAS,eAAOC,GAExB,OAAOD,GAOEI,EAAwB,iBAAO,CAACrB,KAAMjB,EAAiBW,aAAa,IAEpE4B,EAA6B,SAACf,GAAD,MAAkB,CAACP,KAAMd,EAAiBqB,YAAaA,IACpFgB,EAAmC,SAACf,GAAD,MAAmB,CAACR,KAAMb,EAAuBqB,aAAcA,IAClGgB,EAA6B,SAACX,GAAD,MAAiB,CAACb,KAAMZ,EAAiByB,WAAYA,IAClFY,EAAuB,SAACf,GAAD,MAAW,CAACV,KAAMX,EAAUqB,KAAMA,IACzDgB,EAA6B,SAACvD,EAAkBC,GAAnB,MAAgC,CAAC4B,KAAMV,EAAgBnB,iBAAkBA,EAAkBC,QAASA,IACjIuD,EAAgC,SAACZ,GAAD,MAAoB,CAACf,KAAMT,EAAiBwB,cAAeA,IAC3Fa,EAA0B,SAACd,GAAD,MAAc,CAACd,KAAMR,EAAasB,QAASA,IAIrEe,EAAiC,SAACjE,EAAW6C,GAAZ,8CAAsB,WAAOqB,GAAP,iBAAAnE,EAAA,sEAC3CF,EAAcC,mBAAmBE,GADU,YAE/B0C,KAD7BtC,EAD4D,QAEnDoC,iBACT0B,GAhBwC1B,EAgBCpC,EAASoC,gBAhBW,CAACJ,KAAMhB,EAAsBoB,gBAAiBA,KAkB3G0B,GAhB4CV,EAgBCpD,EAASyC,MAhBQ,CAACT,KAAMf,EAA2BmC,aAAcA,KAiBxGb,EAAcwB,KAAKC,KAAKhE,EAASyC,MAAQA,GAC/CqB,EAASR,EAA2Bf,KAGpC0B,QAAQC,OAAOlE,EAASmE,WAVoC,iCAXjB,IAACf,EAFJhB,IAaoB,OAAtB,uDA6GxCgC,EAA4B,SAACC,EAAWC,GAC1C,IAAI1E,EAAY,GAChB,IAAK,IAAI2E,KAAOF,EAAW,CACvB,IADuB,EACnBG,EAAqBD,EAAIE,MAAM,MADZ,cAGLH,GAHK,IAGvB,2BAA0B,CAAC,IAAlBI,EAAiB,QACtB,GAAIA,EAAM9C,OAAS4C,EAAmB,IAAyB,KAAnBH,EAAUE,GAAa,CAC/D,IAAII,EAAiB,GAEjBA,OADuBrC,IAAvBoC,EAAMzC,aACQ,iBAAayC,EAAMzC,aAAnB,YAAmCyC,EAAMxC,cAAzC,KAEA,iBAAawC,EAAM3C,WAAnB,YAAiCyC,EAAmB,GAApD,KAElB,IAAII,EAAQP,EAAUE,QAEQjC,IAA1BkC,EAAmB,GAKnB5E,EAHI+E,OADuBrC,IAAvBoC,EAAMzC,aACQ,iBAAayC,EAAMzC,aAAnB,YAAmCyC,EAAMxC,cAAzC,aAA2DsC,EAAmB,GAA9E,KAEA,iBAAaE,EAAM3C,WAAnB,YAAiCyC,EAAmB,GAApD,aAA2DA,EAAmB,GAA9E,MAClB,WAAgCI,EAAhC,KAEChF,EAAU+E,GAAV,YAAiCC,EAAjC,QApBU,+BAyB3B,OAAOC,OAAOC,KAAKlF,GAAWmF,OAAS,GAAInF,G,kBCzT3CoF,EAAcC,0BAAgB,CAC9BjC,eACAkC,KAAMC,MAKKC,EAFDC,sBAAYL,EAAaM,8BAAoBC,0BAAgBC,O,wFCuE5DC,GA5EM,SAAC,GAUf,IATHtF,EASE,EATFA,iBACAuF,EAQE,EARFA,SACAC,EAOE,EAPFA,WACAC,EAME,EANFA,eACAC,EAKE,EALFA,SACAzF,EAIE,EAJFA,QACA0F,EAGE,EAHFA,SACAC,EAEE,EAFFA,SACA7F,EACE,EADFA,cACE,EAG8B8F,oBAAS,GAHvC,oBAGKC,EAHL,KAGeC,EAHf,OAIkCF,mBAAS5F,GAJ3C,oBAIK+F,EAJL,KAIoBC,EAJpB,KAQIC,EAA0B,WAC5BH,GAAY,IAUhB,OACI,uBAAKI,UAAWC,IAAWR,EAAUS,KAAOC,iBAA5C,UACI,sBAAKH,UAAWC,IAAWC,KAAOE,eAAgBF,KAAOG,MAAzD,SACKxG,IAEL,sBAAKmG,UAAWC,IAAWC,KAAOI,QAASJ,KAAOG,MAAlD,SACKd,IAEL,sBAAKS,UAAWC,IAAWC,KAAOK,aAAcL,KAAOG,MAAvD,SACKf,IAEL,sBAAKU,UAAWC,IAAWC,KAAOM,UAAWN,KAAOG,MAApD,SACKhB,IAEL,sBAAKW,UAAWC,IAAWC,KAAOpG,QAASoG,KAAOG,MAAlD,SACKV,EACG,+BACI,eAACc,GAAA,EAAD,CACI/E,KAAK,OACLgF,WAAW,EACXV,UAAWC,IAAWC,KAAOS,cAC7BrC,MAAOuB,EACPe,OA7BU,WAC1Bf,IAAkB/F,GAClBF,EAAcC,EAAkBgG,GAEpCD,GAAY,IA0BQiB,SApCI,SAAC,GAAD,IAAGvC,EAAH,EAAGA,MAAH,OAAewB,EAAWxB,IAqC9BM,KAAK,YAIb,uBACIoB,UAAWC,IAAWC,KAAOY,aAC7BC,cAAehB,EACfiB,aAAcjB,EAHlB,SAKKjG,MAIb,sBAAKkG,UAAWC,IAAWC,KAAOd,SAAUc,KAAOG,MAAnD,SACKjB,IAEL,sBAAKY,UAAWC,IAAWC,KAAOe,QAASf,KAAOG,KAAMH,KAAOgB,UAA/D,SACK1B,QC7CX2B,GAAiB,CACnBvH,cHuMqC,SAACC,EAAkBC,GAAnB,8CAA+B,WAAO0D,GAAP,eAAAnE,EAAA,sEACxCF,EAAcS,cAAcC,EAAkBC,GADN,QAChEsH,EADgE,QAGhDC,cAAgB,EAChC7D,EAASJ,EAA2BvD,EAAkBC,IAGtD6D,QAAQC,OAAOwD,EAAgBvD,WAPiC,2CAA/B,wDGpM1ByD,gBAVS,SAAC1E,EAAO2E,GAC5B,MAAO,CACHC,cAAeD,EAASC,cACxB/B,SAAU8B,EAAS9B,YAOa0B,GAAzBG,EA9BS,SAAC,GAIlB,IAHHE,EAGE,EAHFA,cACA/B,EAEE,EAFFA,SACA7F,EACE,EADFA,cAEA,OACI,eAAC,GAAD,CACIC,iBAAkB2H,EAAc3H,iBAChCuF,SAAUoC,EAAcpC,SACxBC,WAAYmC,EAAcnC,WAC1BC,eAAgBkC,EAAclC,eAC9BC,SAAUiC,EAAcjC,SACxBzF,QAAS0H,EAAc1H,QACvB0F,SAAUgC,EAAchC,SACxBC,SAAUA,EACV7F,cAAeA,O,wCC0CZ6H,GA1DI,SAAC,GAQb,IAPHC,EAOE,EAPFA,WACAvF,EAME,EANFA,MACAwF,EAKE,EALFA,YACAvF,EAIE,EAJFA,KACAwF,EAGE,EAHFA,WACApF,EAEE,EAFFA,QACAnB,EACE,EADFA,cAGIwG,EAAkB,EAClBC,EAAgB,EAChBH,EAAc,IACdE,EAAkBF,EAAc,EAChCG,EAAgBH,EAAc,GAQlC,IALA,IAAII,EAAsB,SAACC,GACvBN,EAAWM,EAAS7F,EAAOC,EAAMI,EAASnB,IAG1C4G,EAAQ,GACHC,EAAI,EAAGA,GAAKN,EAAYM,IAC7BD,EAAME,KAAKD,GAGf,OAAID,EAAMxD,OAAS,EAEX,sBAAKuB,UAAWoC,KAAMC,WAAtB,SACI,sBAAIrC,UAAWoC,KAAME,eAArB,UACI,qBACItC,UAAWC,IAAWmC,KAAMG,mBAAP,eAA6BH,KAAMI,OAAyB,IAAhBb,IACjEc,QAAS,WAAMV,EAAoB,IAFvC,oBAOIE,EAAMS,MAAMb,EAAiBC,GAAexH,KAAK,SAAAqI,GAAI,OACjD,qBACI3C,UAAWoC,KAAMG,mBAAqB,KAAOZ,IAAgBgB,EAAOP,KAAMQ,0BAA4B,IACtGH,QAAS,WAAMV,EAAoBY,IAFvC,SAIKA,OAIb,qBACI3C,UAAWoC,KAAMG,mBAAqB,KAAOZ,IAAgBM,EAAMxD,OAAS2D,KAAMI,OAAS,IAC3FC,QAAS,WAAMV,EAAoBE,EAAMxD,SAF7C,yBASF,I,qBC3DH,OAA0B,mCCgB1BoE,GAZC,WACZ,OACI,sBAAK7C,UAAWoC,KAAMU,UAAtB,SACI,sBACIC,IAAKC,GACLC,IAAI,aACJjD,UAAWoC,KAAMc,oB,mBCVlB,OAA0B,wCCA1B,OAA0B,8C,sECGnCC,GAAc,SAAC,GAGd,IAFHC,EAEE,EAFFA,SACAC,EACE,EADFA,iBAEA,OACI,sBAAKrD,UACDoC,KAAMkB,YAAc,IAClBD,EAAiBE,iBAFvB,SAIKH,KAqBAI,GAAQ,SAACC,GAAW,IACtBC,EAA6BD,EAA7BC,MAAgBC,GAAaF,EAAtBG,KADc,aACQH,EADR,mBAGtBJ,EAAmB,CACrBQ,eAAgBJ,EAAMI,eAAiBJ,EAAMI,eAAiB,GAC9DN,iBAAkBE,EAAMF,iBAAmBE,EAAMF,iBAAmB,IAGxE,OAAO,eAAC,GAAD,CACHF,iBAAkBA,EADf,SAGH,8DAAWK,GAAWC,GAAtB,IAAiC3D,UAAWqD,EAAiBQ,qBC+DjEC,GAAuBC,aAAU,CACjCnF,KAAM,UADiBmF,EA/FH,SAACN,GACrB,IAAMO,EAAkB,uCAAG,sBAAA3K,EAAA,sDACvBoK,EAAMQ,aADiB,2CAAH,qDAIxB,OACI,wBAAMjE,UAAWE,KAAOgE,YAAxB,UAEQT,EAAMzF,OAAO1D,KAAK,SAAC8D,EAAO+F,GACtB,OAAI/F,EAAM5C,OAEF,uBAAKwE,UAAWC,EACZC,KAAOkE,iBADX,UAGI,sBAAKpE,UAAWC,EAAWC,KAAOmE,iBAAlC,SACKjG,EAAM7C,QAEX,sBAAKyE,UAAWC,EAAWC,KAAOoE,iBAAlC,SAEuB,WAAflG,EAAM1C,KAEF,uBAAKsE,UAAWE,KAAOqE,iBAAvB,UACI,eAACC,GAAA,EAAD,CACI9I,KAAK,SACL+I,UAAWjB,GACXD,iBAAkBrD,KAAOwE,kBACzBb,eAAgB5D,EAAWC,KAAOyE,gBAAiBzE,KAAO0E,mBAC1DC,YAAY,iCACZvJ,KAAM8C,EAAM9C,KAAO,YAEvB,uBAAM0E,UAAWE,KAAO4E,qBAAxB,gCAGA,eAACN,GAAA,EAAD,CACI9I,KAAK,SACL+I,UAAWjB,GACXD,iBAAkBrD,KAAOwE,kBACzBb,eAAgB5D,EAAWC,KAAOyE,gBAAiBzE,KAAO0E,mBAC1DC,YAAY,eACZvJ,KAAM8C,EAAM9C,KAAO,iBAEvB,uBAAM0E,UAAWE,KAAO4E,qBAAxB,eAGA,eAACN,GAAA,EAAD,CACI9I,KAAK,SACL+I,UAAWjB,GACXD,iBAAkBrD,KAAOwE,kBACzBb,eAAgB5D,EAAWC,KAAOyE,gBAAiBzE,KAAO0E,mBAC1DC,YAAY,eACZvJ,KAAM8C,EAAM9C,KAAO,eAEvB,uBAAM0E,UAAWE,KAAO4E,qBAAxB,gCAGA,eAACN,GAAA,EAAD,CACI9I,KAAK,OACL+I,UAAWjB,GACXD,iBAAkBrD,KAAOwE,kBACzBb,eAAgB3D,KAAOyE,gBACvBE,YAAY,6HACZvJ,KAAM8C,EAAM9C,KAAO,iBAI3B,eAACkJ,GAAA,EAAD,CACI9I,KAAK,OACL+I,UAAWjB,GACXD,iBAAkBrD,KAAOwE,kBACzBb,eAAgB3D,KAAOyE,gBACvBE,YAAY,mDACZvJ,KAAM8C,EAAM9C,WA1DxB6I,GAiEJ,MAGpB,sBAAKnE,UAAWC,EAAWC,KAAO6E,YAAlC,SACI,eAACC,GAAA,EAAD,CACIC,KAAK,IACLC,KAAK,UACL3J,MAAM,yDACN4J,MAAM,UACNnF,UAAWE,KAAOkF,aAClB3C,QAASuB,YAqGvB7C,GAAiB,CACnB8C,WV2EkC,yDAAM,WAAOzG,GAAP,eAAAnE,EAAA,sDAClCwD,EAASwI,YAAO,UACtB7H,EAASX,GAF+B,2CAAN,uDU1ElCyI,WVuCkC,SAACvH,EAAWC,EAAQ5B,EAAMD,GAA1B,8CAAoC,WAAOqB,GAAP,iBAAAnE,EAAA,sDAChEC,EAAY,CACd,OAAUwE,EAA0BC,EAAWC,GAC/C,MAAQ,GAAR,OAAY7B,GACZ,KAAO,IAAP,OAAYC,EAAKX,WAAjB,YAA+BW,EAAKC,QAApC,YAA+CD,EAAKE,SAApD,MAGJkB,EAASN,GAA2B,IAChCqI,EAAuB/H,EAASD,EAA+BjE,EAAW6C,IAE9EwB,QAAQ6H,IAAI,CAACD,IAAuB9L,MAAK,WACrC+D,EAASN,GAA2B,IACpCM,EAASP,EAAiC,IAC1CO,EAASF,EAAwBS,IACjCP,EAASH,GAA8B,OAd2B,2CAApC,uDUtClCoI,aVwDoC,SAACrJ,EAAMD,GAAP,8CAAiB,WAAOqB,GAAP,iBAAAnE,EAAA,sDACjDC,EAAY,CACZ,MAAQ,GAAR,OAAY6C,GACZ,KAAO,IAAP,OAAYC,EAAKX,WAAjB,YAA+BW,EAAKC,QAApC,YAA+CD,EAAKE,SAApD,MAEJkB,EAASN,GAA2B,IAChCqI,EAAuB/H,EAASD,EAA+BjE,EAAW6C,IAE9EwB,QAAQ6H,IAAI,CAACD,IAAuB9L,MAAK,WACrC+D,EAASN,GAA2B,IACpCM,EAASP,EAAiC,IAC1CO,EAASF,EAAwB,KACjCE,EAASH,GAA8B,OAZU,2CAAjB,wDUrDzBiE,gBAhBS,SAAC1E,GACrB,MAAO,CACHH,cAAeG,EAAMF,aAAaD,cAClCuB,OAAQpB,EAAMF,aAAarB,cAC3Bc,MAAOS,EAAMF,aAAaP,MAC1BC,KAAMQ,EAAMF,aAAaN,KACzBsJ,YAAa9I,EAAMF,aAAaF,WAUA2E,GAAzBG,EAhGK,SAAC,GASd,IARHtD,EAQE,EARFA,OACAvB,EAOE,EAPFA,cACAwH,EAME,EANFA,WACAqB,EAKE,EALFA,WACAG,EAIE,EAJFA,aACArJ,EAGE,EAHFA,KACAD,EAEE,EAFFA,MACAuJ,EACE,EADFA,YACE,EACoCC,IAAMjG,UAAS,GADnD,oBACKkG,EADL,KACkBC,EADlB,OAE0CF,IAAMjG,UAAS,GAFzD,oBAEKoG,EAFL,KAEqBC,EAFrB,KAIIC,EAAa,WACfH,GAAe,GACfE,GAAkB,IA0BtB,OACI,iCACI,sBAAKhD,IAAKkD,GAAYhD,IAAI,GAAGjD,UAAU,eAAeyC,QAAS,kBAAMoD,GAAe,MAEhFpJ,EACE,sBAAKsG,IAAKmD,GAAiBjD,IAAI,GAAGjD,UAAU,eAAeyC,QATlD,WACnBgD,EAAarJ,EAAMD,MAST,GAEN,gBAACgK,GAAA,EAAD,CACIC,OAAQR,EACRS,YAAU,EACVC,eAAgBN,EAChBhG,UAAWC,EAAWC,KAAOqG,aAJjC,UAMI,uBAAKvG,UAAWC,EAAWC,KAAOsG,aAAlC,UACI,uBAAKxG,UAAWC,EAAWC,KAAOuG,YAAlC,qHAGQX,EACA,sBAAK9F,UAAWE,KAAOwG,kBAAvB,6JAES,MAGjB,uBAAM1G,UAAWE,KAAOyG,WAAYlE,QAASuD,EAA7C,qBAEJ,sBAAKhG,UAAWC,EAAWC,KAAO0G,WAAlC,SACI,eAAC9C,GAAD,CACI9F,OAAQA,EACR6I,SApDH,SAAC9I,GACd,IAAI+I,EAAc,GAClB,IAAK,IAAI7I,KAAOF,EAAW,CACvB,IADuB,EACnBG,EAAqBD,EAAIE,MAAM,MADZ,cAELH,GAFK,IAEvB,2BAA0B,SACZ1C,OAAS4C,EAAmB,IAClC4I,EAAY3E,KAAKlE,IAJF,+BAQvB6I,EAAYrI,OAAS,GACrB6G,EAAWvH,EAAWC,EAAQ5B,EAAMD,GACpC6J,KAGAD,GAAkB,IAsCN9B,WAAYA,EACZ8C,cAAerB,eClExBsB,G,4MA3GXC,WAAa,SAACC,GAEV,GADeA,EAAEC,OAAOC,QAAQC,WAClB,CACV,IAIMjL,EAAO,CACTX,WALeyL,EAAEC,OAAOC,QAAQE,UAMhCjL,QALY6K,EAAEC,OAAOC,QAAQG,SAM7BjL,SALa4K,EAAEC,OAAOC,QAAQI,SAQlC,EAAK/D,MAAMwD,WACP7K,EACA,EAAKqH,MAAMvH,aACX,EAAKuH,MAAMtH,MACX,EAAKsH,MAAMjH,QACX,EAAKiH,MAAMpI,iB,4CAKvB,WAAU,IAAD,OACL,OAAIoM,KAAKhE,MAAMlH,WAEP,eAAC,GAAD,IAIJ,iCACI,uBAAKyD,UAAWC,IAAWC,KAAOwH,cAAlC,UACI,uBAAK1H,UAAWE,KAAOyH,SAAvB,UACI,uBAAK3H,UAAWE,KAAO0H,cAAvB,qJAC8B,uBAAM5H,UAAWE,KAAO2H,WAAxB,SAAqCJ,KAAKhE,MAAM1H,2BAE9E,sBAAKiE,UAAWE,KAAO4H,gBAAvB,SACI,eAAC,GAAD,SAGR,sBAAK9H,UAAWE,KAAO6H,YAAvB,SAEQN,KAAKhE,MAAMpI,cAAcf,KAAK,SAAC0N,EAAQ7D,GAAW,IAAD,EAC7C,OACI,sBAAKnE,UAAWC,IACZC,KAAO+H,WADe,eAEpB/H,KAAOgI,iBAAmB,EAAKzE,MAAMrH,KAAKC,UAAY2L,EAAO1M,MAFzC,eAGpB4E,KAAOgB,SAAW,EAAKuC,MAAMpI,cAAcoD,OAAS,IAAM0F,IAHhE,SAKI,uBAEInE,UAAWC,IAAWC,KAAOiI,gBAC7BC,kBAAiBJ,EAAOvM,WACxB4M,qBAAkBL,EAAOxM,QAASwM,EAAOxM,OACzC8M,iBAAgBN,EAAO1M,KACvBiN,gBAAe,EAAK9E,MAAMrH,KAAKC,UAAY2L,EAAO1M,MAAqC,QAA7B,EAAKmI,MAAMrH,KAAKE,SAAqB,OAAS,MACxGmG,QAAS,EAAKwE,WAPlB,UASKe,EAAOzM,MAEJyM,EAAOxM,OACL,sBAAKwE,UAAWC,IACVC,KAAOsI,YADa,mBAGftI,KAAOuI,QAAU,EAAKhF,MAAMrH,KAAKC,UAAY2L,EAAO1M,MAAqC,QAA7B,EAAKmI,MAAMrH,KAAKE,UAH7D,cAIf4D,KAAOwI,SAAW,EAAKjF,MAAMrH,KAAKC,UAAY2L,EAAO1M,MAAqC,SAA7B,EAAKmI,MAAMrH,KAAKE,UAJ9D,IAA1B,oBAQA,KAnBD6H,UA4BzBsD,KAAKhE,MAAM3H,gBAAgB2C,OAAS,EACpCgJ,KAAKhE,MAAM3H,gBAAgBxB,KAAK,SAACkH,EAAe2C,GAC5C,OACI,eAACwE,GAAD,CAEInH,cAAeA,EACf/B,SAAU0E,EAAQ,IAAM,EAAG,OAAS,OAF/B3C,EAAcoH,OAM/B,sBAAK5I,UAAWE,KAAO2I,cAAvB,6GAKR,eAAC,GAAD,CACInH,WAAY+F,KAAKhE,MAAM/B,WACvBvF,MAAOsL,KAAKhE,MAAMtH,MAClBwF,YAAa8F,KAAKhE,MAAMvH,aACxB0F,WAAY6F,KAAKhE,MAAMxH,YACvBG,KAAMqL,KAAKhE,MAAMrH,KACjBI,QAASiL,KAAKhE,MAAMjH,QACpBnB,cAAeoM,KAAKhE,MAAMpI,uB,GArGnBsK,IAAMmD,WCJ3BC,G,4MAEFC,aAAe,SAAC5M,EAAKF,EAAaC,EAAOK,EAASnB,GAC9C,EAAKoI,MAAMwD,WAAW7K,EAAMF,EAAcC,EAAOK,EAASnB,I,4CAG9D,WACI,OACI,eAAC,GAAD,CACIA,cAAeoM,KAAKhE,MAAMpI,cAC1BmB,QAASiL,KAAKhE,MAAMjH,QACpBV,gBAAiB2L,KAAKhE,MAAM3H,gBAC5BI,aAAcuL,KAAKhE,MAAMvH,aACzBD,YAAawL,KAAKhE,MAAMxH,YACxBE,MAAOsL,KAAKhE,MAAMtH,MAClBC,KAAMqL,KAAKhE,MAAMrH,KACjBL,sBAAuB0L,KAAKhE,MAAM1H,sBAClCQ,WAAYkL,KAAKhE,MAAMlH,WACvB0K,WAAYQ,KAAKuB,aACjBtH,WAAY+F,KAAKhE,MAAM/B,iB,GAnBAiE,IAAMmD,WAsCvC3H,GAAiB,CACnBO,WZyJ4C,SAACuH,EAAU9M,EAAOC,EAAMI,EAASwB,GAAjC,8CAA4C,WAAOR,GAAP,mBAAAnE,EAAA,sDAClF6P,EAAS1O,UAAUyO,EAAW,GAAK9M,EAAQ,GAC7C7C,EAAY,CACZ,KAAO,IAAP,OAAY8C,EAAKX,WAAjB,YAA+BW,EAAKC,QAApC,YAA+CD,EAAKE,SAApD,KACA,MAAgC,IAAvB9B,SAASyO,GAAT,UAA8B9M,GAA9B,UAA2C+M,EAA3C,YAAqD/M,GAC9D,OAAU2B,EAA0BtB,EAASwB,IAGjDR,EAASN,GAA2B,IAChCqI,EAAuB/H,EAASD,EAA+BjE,EAAW6C,IAE9EwB,QAAQ6H,IAAI,CAACD,IAAuB9L,MAAK,WACrC+D,EAASN,GAA2B,IACpCM,EAASP,EAAiCgM,OAb0C,2CAA5C,uDYxJ5ChC,WZyK+B,SAAC7K,EAAM6M,EAAU9M,EAAOK,EAASwB,GAAjC,8CAA4C,WAAOR,GAAP,mBAAAnE,EAAA,sDACrE6P,EAAS1O,UAAUyO,EAAW,GAAK9M,EAAQ,GAC7C7C,EAAY,CACZ,KAAO,IAAP,OAAY8C,EAAKX,WAAjB,YAA+BW,EAAKC,QAApC,YAA+CD,EAAKE,SAApD,KACA,MAAgC,IAAvB9B,SAASyO,GAAT,UAA8B9M,GAA9B,UAA2C+M,EAA3C,YAAqD/M,GAC9D,OAAU2B,EAA0BtB,EAASwB,IAGjDR,EAASN,GAA2B,IAChCqI,EAAuB/H,EAASD,EAA+BjE,EAAW6C,IAE9EwB,QAAQ6H,IAAI,CAACD,IAAuB9L,MAAK,WACrC+D,EAASN,GAA2B,IACpCM,EAASL,EAAqBf,OAbyC,2CAA5C,wDYtKpBkF,gBAlBS,SAAC1E,GACrB,MAAO,CACHvB,cAAeuB,EAAMF,aAAarB,cAClCS,gBAAiBc,EAAMF,aAAaZ,gBACpCI,aAAcU,EAAMF,aAAaR,aACjCD,YAAaW,EAAMF,aAAaT,YAChCE,MAAOS,EAAMF,aAAaP,MAC1BC,KAAMQ,EAAMF,aAAaN,KACzBL,sBAAuBa,EAAMF,aAAaX,sBAC1CQ,WAAYK,EAAMF,aAAaH,WAC/BC,QAASI,EAAMF,aAAaF,WAQI2E,GAAzBG,CAAyCyH,I,SCxClDI,G,4MAEFC,wBAA0B,SAACC,GACvBC,MAAMD,EAAsBE,S,uDAGhC,WACI,IAAMjQ,EAAY,CACd,MAASmO,KAAKhE,MAAMtH,MACpB,KAAO,IAAP,OAAYsL,KAAKhE,MAAMrH,KAAKX,WAA5B,YAA0CgM,KAAKhE,MAAMrH,KAAKC,QAA1D,YAAqEoL,KAAKhE,MAAMrH,KAAKE,SAArF,MAGJmL,KAAKhE,MAAM+F,cAAclQ,EAAWmO,KAAKhE,MAAMtH,OAC/CsN,OAAOC,iBAAiB,qBAAsBjC,KAAK2B,2B,kCAGvD,WACIK,OAAOE,oBAAoB,qBAAsBlC,KAAK2B,2B,oBAG1D,WACI,OAAK3B,KAAKhE,MAAMmG,cAIZ,eAACC,GAAA,EAAD,CAAOC,OAAQC,KAAf,SACI,eAACC,GAAD,MAJG,eAAC,GAAD,Q,GAtBDrE,IAAMmD,WAyCpB3H,GAAiB,CACjBqI,cbwOyB,eAAClQ,EAAD,uDAAa,GAAI6C,EAAjB,qFAA2B,WAAOqB,GAAP,eAAAnE,EAAA,sDAChD4Q,EAAsBzM,EAASD,EAA+BjE,EAAW6C,IAE7EwB,QAAQ6H,IAAI,CAACyE,IAAqBxQ,MAAK,WACnC+D,EAAST,QAJuC,2CAA3B,wDarOvBmN,GAAgB5I,aAZA,SAAC1E,GACnB,MAAO,CACHgN,cAAehN,EAAMF,aAAatB,YAClCe,MAAOS,EAAMF,aAAaP,MAC1BC,KAAMQ,EAAMF,aAAaN,QAQc+E,GAAzBG,CAAyC6H,IAUhDgB,GARC,SAAC1G,GACb,OACI,eAAC,IAAD,CAAU3E,MAAOA,EAAjB,SACI,eAACoL,GAAD,CAAcpL,MAAOA,OC9ClBsL,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7Q,MAAK,YAAkD,IAA/C8Q,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,eAAC,GAAD,IAAYC,SAASC,eAAe,SAKpDX,M,kBCVAvR,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,UAAY,+BAA+B,WAAa,gCAAgC,WAAa,gCAAgC,kBAAoB,uCAAuC,WAAa,gCAAgC,aAAe,kCAAkC,gBAAkB,qCAAqC,gBAAkB,qCAAqC,gBAAkB,qCAAqC,kBAAoB,uCAAuC,iBAAmB,sCAAsC,qBAAuB,6C","file":"static/js/main.498153c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationListItemCurrent\":\"Preloader_paginationListItemCurrent__23JwV\",\"preloader\":\"Preloader_preloader__25UOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderHistoryRow\":\"OrderHistory_orderHistoryRow__3BJzk\",\"cell\":\"OrderHistory_cell__1U2tn\",\"lastCell\":\"OrderHistory_lastCell__3VCT0\",\"commentText\":\"OrderHistory_commentText__2B-8B\",\"commentInput\":\"OrderHistory_commentInput__17v94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3X5mY\",\"error\":\"FormControls_error__357JG\",\"errorMessageBlock\":\"FormControls_errorMessageBlock__QXcEG\",\"rightSignError\":\"FormControls_rightSignError__30MqG\",\"leftSignError\":\"FormControls_leftSignError__f6KDX\",\"right\":\"FormControls_right__2vpUH\",\"left\":\"FormControls_left__1LEii\",\"errorMessage\":\"FormControls_errorMessage__r4ftl\",\"summaryFormError\":\"FormControls_summaryFormError__1EwJH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"historyTable\":\"HistoryTable_historyTable__2sGIp\",\"tableHeader\":\"HistoryTable_tableHeader__285qJ\",\"headerCell\":\"HistoryTable_headerCell__37PUS\",\"headerCellActive\":\"HistoryTable_headerCellActive__1CxO0\",\"headerCellText\":\"HistoryTable_headerCellText__1Hj3U\",\"lastCell\":\"HistoryTable_lastCell__2lddY\",\"sortButton\":\"HistoryTable_sortButton__3zyt5\",\"sortAsc\":\"HistoryTable_sortAsc__3rwoS\",\"sortDesc\":\"HistoryTable_sortDesc__3Cg0W\",\"tableTop\":\"HistoryTable_tableTop__2U0Rz\",\"tableTopLabel\":\"HistoryTable_tableTopLabel__1NZGR\",\"totalCount\":\"HistoryTable_totalCount__2_fvN\",\"tableEmptyRow\":\"HistoryTable_tableEmptyRow__1fYVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__q_MPa\",\"paginationList\":\"Pagination_paginationList__2WQyc\",\"paginationListItem\":\"Pagination_paginationListItem__32lIT\",\"paginationListItemCurrent\":\"Pagination_paginationListItemCurrent__CMMw5\",\"hidden\":\"Pagination_hidden__1Yhht\"};","import axios from 'axios';\r\n\r\nconst domain = 'https://strategshop';\r\n/**\r\n * baseURL задачется через модуль в контролере AdminOrderGistories через Media::addJsDef()\r\n */\r\n\r\nconst instanceModule = axios.create({\r\n    baseURL: `${domain}/module/pworderhistories/orderhistories`,\r\n})\r\n\r\nexport const prestashopAPI = {\r\n\r\n    getOrdersHistories: async (getParams = {}) => {\r\n        let params = {\r\n            'method': 'getOrderHistories',\r\n            'limit': getParams['limit'] ? getParams['limit'] : 20,\r\n            'display': 'full',\r\n            'sort': getParams['sort'] ? getParams['sort'] : '[main|id_order_history-DESC]',\r\n            'filter[main|id_employee]': `![0]`\r\n        };\r\n\r\n        if (getParams['filter']) {\r\n            params = {...params, ...getParams['filter']}\r\n            params['filterModal'] = true;\r\n        }\r\n\r\n        return instanceModule.get(``, {params: params}).then( response => {\r\n            return response.data;\r\n        });\r\n    },\r\n\r\n    updateComment: async (id_order_history, comment) => {\r\n        let postParams = {\r\n            'method': 'updateComment',\r\n            'id_order_history': id_order_history,\r\n            'comment': comment,\r\n        }\r\n        return instanceModule.put(``, postParams).then( response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProp) => {\r\n    return items.map( item => {\r\n        if (parseInt(item[objPropName]) === parseInt(itemId)) {\r\n            let itemCopy = {\r\n                ...item,\r\n                ...newObjProp\r\n            };\r\n            return itemCopy;\r\n        }\r\n        return item;\r\n    });\r\n}","import { prestashopAPI } from \"../../api/api\";\r\nimport { updateObjectInArray } from '../../utils/helpers/helperObject';\r\nimport { submit } from \"redux-form\";\r\n\r\nconst SET_INITIALIZED = 'react-prestashop/indexReducer/SET-INIT-APP';\r\nconst SET_ORDERS_HISTORIES = 'react-prestashop/indexReducer/SET-ORDERS-HISTORIES';\r\nconst SET_TOTAL_ORDER_HISTORIES = 'react-prestashop/indexReducer/SET-TOTAL-ORDER-HISTORIES';\r\nconst SET_TOTAL_PAGES = 'react-prestashop/indexReducer/SET-TOTAL-PAGES';\r\nconst ONCHANGE_CURRENT_PAGE = 'react-prestashop/indexReducer/ONCHANGE-CURRENT-PAGE';\r\nconst SET_IF_FETCHING = 'react-prestashop/indexReducer/SET-IS-FETCHING';\r\nconst SET_SORT = 'react-prestashop/indexReducer/SET-SORT';\r\nconst UPDATE_COMMENT = 'react-prestashop/indexReducer/UPDATE-COMMENT';\r\nconst IS_FILTERS_USED = 'react-prestashop/indexReducer/IS-FILTERS-USED';\r\nconst SET_FILTERS = 'react-prestashop/indexReducer/SET-FILTERS';\r\n\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n    table_columns: [\r\n        {\r\n            name: 'id_order_history',\r\n            label: 'ID',\r\n            filter: true,\r\n            table_name: 'main',\r\n            type: 'number'\r\n        },\r\n        {\r\n            name: 'id_order',\r\n            label: 'ID заказа',\r\n            filter: true,\r\n            table_name: 'main',\r\n            type: 'number'\r\n        },\r\n        {\r\n            name: 'old_state_name',\r\n            label: 'Старый статус',\r\n            filter: false,\r\n            table_name: 'osl',\r\n        },\r\n        {\r\n            name: 'state_name',\r\n            label: 'Новый статус',\r\n            filter: true,\r\n            table_name: 'nothing',\r\n            filter_table: 'osl',\r\n            filter_column: 'name',\r\n            type: 'text',\r\n        },\r\n        {\r\n            name: 'comment',\r\n            label: 'Причина изменения',\r\n            filter: true,\r\n            filter_condition: 'like',\r\n            table_name: 'main',\r\n            type: 'text',\r\n        },\r\n        {\r\n            name: 'employee',\r\n            label: 'Пользователь',\r\n            filter: true,\r\n            table_name: 'nothing',\r\n            type: 'text'\r\n        },\r\n        {\r\n            name: 'date_add',\r\n            label: 'Дата изменения',\r\n            filter: true,\r\n            table_name: 'main',\r\n            type: 'date'\r\n        },\r\n    ],\r\n    order_histories: [],\r\n    total_order_histories: undefined,\r\n    total_pages: undefined,\r\n    current_page: 1,\r\n    count: 20,\r\n    sort: {\r\n        table_name: 'main',\r\n        orderby: 'id_order_history',\r\n        orderway: 'DESC'\r\n    },\r\n    isFetching: false,\r\n    filters: {},\r\n    isFiltersUsed: false,\r\n}\r\n\r\nexport const indexReducer = (state = initialState, action) => {\r\n\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case SET_INITIALIZED: {\r\n            stateCopy = {\r\n                ...state,\r\n                initialized: action.initialized\r\n            }\r\n            break;\r\n        }\r\n        case SET_ORDERS_HISTORIES: {\r\n            stateCopy = {\r\n                ...state,\r\n                order_histories: [...action.order_histories]\r\n            }\r\n            break;\r\n        }\r\n        case SET_TOTAL_ORDER_HISTORIES: {\r\n            stateCopy = {\r\n                ...state,\r\n                total_order_histories: action.total_number\r\n            }\r\n            break;\r\n        }\r\n        case ONCHANGE_CURRENT_PAGE: {\r\n            stateCopy = {\r\n                ...state,\r\n                current_page: action.current_page\r\n            }\r\n            break; \r\n        }\r\n        case SET_IF_FETCHING: {\r\n            stateCopy = {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n            break; \r\n        }\r\n        case SET_TOTAL_PAGES: {\r\n            stateCopy = {\r\n                ...state,\r\n                total_pages: action.total_pages\r\n            }\r\n            break; \r\n        }\r\n        case SET_SORT: {\r\n            stateCopy = {\r\n                ...state,\r\n                sort: {...action.sort}\r\n            }\r\n            break; \r\n        }\r\n        case UPDATE_COMMENT: {\r\n            stateCopy = {\r\n                ...state,\r\n                order_histories: updateObjectInArray(state.order_histories, action.id_order_history, 'id_order_history', {comment: action.comment})\r\n            }\r\n            break; \r\n        }\r\n        case IS_FILTERS_USED: {\r\n            stateCopy = {\r\n                ...state,\r\n                isFiltersUsed: action.isFiltersUsed\r\n            }\r\n            break; \r\n        }\r\n        case SET_FILTERS: {\r\n            stateCopy = {\r\n                ...state,\r\n                filters: {...action.filters}\r\n            }\r\n            break; \r\n        }\r\n        default:\r\n            stateCopy = {...state};\r\n    }\r\n    return stateCopy;\r\n}\r\n\r\nexport default indexReducer;\r\n\r\n/** Action creators */\r\nexport const setOrdersHistoriesActionCreator = (order_histories) => ({type: SET_ORDERS_HISTORIES, order_histories: order_histories});\r\nexport const setInitializedCreator = () => ({type: SET_INITIALIZED, initialized: true});\r\nexport const setTotalOrderHistoriesActionCreator = (total_number) => ({type: SET_TOTAL_ORDER_HISTORIES, total_number: total_number});\r\nexport const setTotalPagesActionCreator = (total_pages) => ({type: SET_TOTAL_PAGES, total_pages: total_pages});\r\nexport const onChangeCurrentPageActionCreator = (current_page) => ({type: ONCHANGE_CURRENT_PAGE, current_page: current_page});\r\nexport const setIsFetchingActionCreator = (isFetching) => ({type: SET_IF_FETCHING, isFetching: isFetching});\r\nexport const setSortActionCreator = (sort) => ({type: SET_SORT, sort: sort});\r\nexport const updateCommentActionCreator = (id_order_history, comment) => ({type: UPDATE_COMMENT, id_order_history: id_order_history, comment: comment});\r\nexport const setIsFiltersUsedActionCreator = (isFiltersUsed) => ({type: IS_FILTERS_USED, isFiltersUsed: isFiltersUsed});\r\nexport const setFiltersActionCreator = (filters) => ({type: SET_FILTERS, filters: filters});\r\n/** ---------------- */\r\n\r\n/** Thunk creators */\r\nexport const setOrdersHistoriesThunkCreator = (getParams, count) => async (dispatch) => {\r\n    let response = await prestashopAPI.getOrdersHistories(getParams);\r\n    if (response.order_histories !== undefined) {\r\n        dispatch(setOrdersHistoriesActionCreator(response.order_histories));\r\n\r\n        dispatch(setTotalOrderHistoriesActionCreator(response.count));\r\n        const total_pages = Math.ceil(response.count / count);\r\n        dispatch(setTotalPagesActionCreator(total_pages));\r\n    }\r\n    else {\r\n        Promise.reject(response.error_msg);\r\n    }\r\n}\r\n\r\nexport const updateOrderHistoriesThunkCreator = (page_num, count, sort, filters, fields) => async (dispatch) => {\r\n    const offset = parseInt((page_num - 1) * count - 1);\r\n    let getParams = {\r\n        'sort': `[${sort.table_name}|${sort.orderby}-${sort.orderway}]`,\r\n        'limit': parseInt(page_num) === 1 ? `${count}` : `${offset},${count}`,\r\n        'filter': getRequestParamsByFilters(filters, fields),\r\n    }\r\n\r\n    dispatch(setIsFetchingActionCreator(true));\r\n    let updateOrderHistories = dispatch(setOrdersHistoriesThunkCreator(getParams, count));\r\n\r\n    Promise.all([updateOrderHistories]).then(() => {\r\n        dispatch(setIsFetchingActionCreator(false));\r\n        dispatch(onChangeCurrentPageActionCreator(page_num));\r\n    })\r\n}\r\n\r\nexport const setSortThunkCreator = (sort, page_num, count, filters, fields) => async (dispatch) => {\r\n    const offset = parseInt((page_num - 1) * count - 1);\r\n    let getParams = {\r\n        'sort': `[${sort.table_name}|${sort.orderby}-${sort.orderway}]`,\r\n        'limit': parseInt(page_num) === 1 ? `${count}` : `${offset},${count}`,\r\n        'filter': getRequestParamsByFilters(filters, fields),\r\n    }\r\n    \r\n    dispatch(setIsFetchingActionCreator(true));\r\n    let updateOrderHistories = dispatch(setOrdersHistoriesThunkCreator(getParams, count));\r\n\r\n    Promise.all([updateOrderHistories]).then(() => {\r\n        dispatch(setIsFetchingActionCreator(false));\r\n        dispatch(setSortActionCreator(sort));\r\n    })\r\n}\r\n\r\nexport const updateCommentThunkCreator = (id_order_history, comment) => async (dispatch) => {\r\n    let response_update = await prestashopAPI.updateComment(id_order_history, comment);\r\n\r\n    if (response_update.affected_rows > 0) {\r\n        dispatch(updateCommentActionCreator(id_order_history, comment));\r\n    }\r\n    else {\r\n        Promise.reject(response_update.error_msg);\r\n    }\r\n}\r\n\r\nexport const setFiltersThunkCreator = (form_data, fields, sort, count) => async (dispatch) => {\r\n    const getParams = {\r\n        'filter': getRequestParamsByFilters(form_data, fields),\r\n        'limit': `${count}`,\r\n        'sort': `[${sort.table_name}|${sort.orderby}-${sort.orderway}]`\r\n    };\r\n\r\n    dispatch(setIsFetchingActionCreator(true));\r\n    let updateOrderHistories = dispatch(setOrdersHistoriesThunkCreator(getParams, count));\r\n\r\n    Promise.all([updateOrderHistories]).then(() => {\r\n        dispatch(setIsFetchingActionCreator(false));\r\n        dispatch(onChangeCurrentPageActionCreator(1));\r\n        dispatch(setFiltersActionCreator(form_data));\r\n        dispatch(setIsFiltersUsedActionCreator(true));\r\n    });\r\n}\r\n\r\nexport const unsetFiltersThunkCreator = (sort, count) => async (dispatch) => {\r\n    let getParams = {\r\n        'limit': `${count}`,\r\n        'sort': `[${sort.table_name}|${sort.orderby}-${sort.orderway}]`\r\n    }\r\n    dispatch(setIsFetchingActionCreator(true));\r\n    let updateOrderHistories = dispatch(setOrdersHistoriesThunkCreator(getParams, count));\r\n\r\n    Promise.all([updateOrderHistories]).then(() => {\r\n        dispatch(setIsFetchingActionCreator(false));\r\n        dispatch(onChangeCurrentPageActionCreator(1));\r\n        dispatch(setFiltersActionCreator({}));\r\n        dispatch(setIsFiltersUsedActionCreator(false));\r\n    });\r\n}\r\n\r\n// manual submit filter form\r\nexport const formSubmitThunkCreator = () => async (dispatch) => {\r\n    const action = submit('filter');\r\n    dispatch(action);\r\n}\r\n/** ------------- */\r\nexport const initializeApp = (getParams = {}, count) => async (dispatch) => {\r\n    let setOrdersHistories =  dispatch(setOrdersHistoriesThunkCreator(getParams, count, true));\r\n\r\n    Promise.all([setOrdersHistories]).then(() => {\r\n        dispatch(setInitializedCreator());\r\n    })\r\n}\r\n\r\n\r\n/** Other functions */\r\nconst getRequestParamsByFilters = (form_data, fields) => {\r\n    let getParams = {};\r\n    for (let key in form_data) {\r\n        let name_condition_arr = key.split('||');\r\n\r\n        for (let field of fields) {\r\n            if (field.name === name_condition_arr[0] && form_data[key] !== '') {\r\n                let get_params_key = '';\r\n                if (field.filter_table !== undefined) \r\n                    get_params_key = `filter[${field.filter_table}|${field.filter_column}]`; \r\n                else\r\n                    get_params_key = `filter[${field.table_name}|${name_condition_arr[0]}]`; \r\n\r\n                let value = form_data[key];\r\n\r\n                if (name_condition_arr[1] !== undefined) {\r\n                    if (field.filter_table !== undefined) \r\n                        get_params_key = `filter[${field.filter_table}|${field.filter_column}||${name_condition_arr[1]}]`; \r\n                    else\r\n                        get_params_key = `filter[${field.table_name}|${name_condition_arr[0]}||${name_condition_arr[1]}]`; \r\n                    getParams[get_params_key] = `[${value}]`;\r\n                }\r\n                else getParams[get_params_key] = `%[${value}]%`;\r\n            }\r\n        }\r\n    }\r\n\r\n    return Object.keys(getParams).length > 0 ? getParams : false;\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport indexReducer from './reducers/indexReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet rootReducer = combineReducers({\r\n    indexReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\nimport '../HistoryTable/HistoryTableComplex.css';\r\nimport styles from './OrderHistory.module.css';\r\nimport classnames from 'classnames';\r\nimport { TextField } from '@consta/uikit/TextField';\r\n\r\nconst OrderHistory = ({\r\n    id_order_history,\r\n    employee,\r\n    state_name,\r\n    old_state_name,\r\n    id_order,\r\n    comment,\r\n    date_add,\r\n    odd_even,\r\n    updateComment,\r\n}) => {\r\n\r\n    /** destructure assignment */\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [comment_value, setComment] = useState(comment);\r\n\r\n    const handleCommentChange = ({ value }) => setComment(value);\r\n\r\n    const activateCommentEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const diactivateCommentEditMode = () => {\r\n        if (comment_value !== comment) {\r\n            updateComment(id_order_history, comment_value);\r\n        }\r\n        setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classnames(odd_even, styles.orderHistoryRow)}>\r\n            <div className={classnames(styles.idOrderHistory, styles.cell)}>\r\n                {id_order_history}\r\n            </div>\r\n            <div className={classnames(styles.idOrder, styles.cell)}>\r\n                {id_order}\r\n            </div>\r\n            <div className={classnames(styles.oldStateName, styles.cell)}>\r\n                {old_state_name}\r\n            </div>\r\n            <div className={classnames(styles.stateName, styles.cell)}>\r\n                {state_name}\r\n            </div>\r\n            <div className={classnames(styles.comment, styles.cell)} >\r\n                {editMode ? (\r\n                    <div>\r\n                        <TextField \r\n                            type=\"text\" \r\n                            autoFocus={true} \r\n                            className={classnames(styles.commentInput)}\r\n                            value={comment_value}\r\n                            onBlur={diactivateCommentEditMode}\r\n                            onChange={handleCommentChange}\r\n                            form=\"brick\"\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                    <span\r\n                        className={classnames(styles.commentText)}\r\n                        onDoubleClick={activateCommentEditMode}\r\n                        onTouchStart={activateCommentEditMode}\r\n                    >\r\n                        {comment}\r\n                    </span>\r\n                )}\r\n            </div>\r\n            <div className={classnames(styles.employee, styles.cell)}>\r\n                {employee}\r\n            </div>\r\n            <div className={classnames(styles.dateAdd, styles.cell, styles.lastCell)}>\r\n                {date_add}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderHistory;","import React from 'react';\r\nimport OrderHistory from './OrderHistory';\r\nimport { connect } from 'react-redux';\r\nimport { updateCommentThunkCreator } from '../../redux/reducers/indexReducer';\r\n\r\nconst OrderHistoryAPI = ({\r\n    order_history,\r\n    odd_even,\r\n    updateComment\r\n}) => {\r\n    return (\r\n        <OrderHistory \r\n            id_order_history={order_history.id_order_history}\r\n            employee={order_history.employee}\r\n            state_name={order_history.state_name}\r\n            old_state_name={order_history.old_state_name}\r\n            id_order={order_history.id_order}\r\n            comment={order_history.comment}\r\n            date_add={order_history.date_add}\r\n            odd_even={odd_even}\r\n            updateComment={updateComment}\r\n        />\r\n    ); \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        order_history: ownProps.order_history,\r\n        odd_even: ownProps.odd_even,\r\n    }\r\n}\r\nconst actionCreators = {\r\n    updateComment: updateCommentThunkCreator\r\n}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(OrderHistoryAPI);","import React from \"react\";\r\nimport classnames from 'classnames';\r\nimport style from './Pagination.module.css';\r\n\r\nconst Pagination = ({\r\n    updateData,\r\n    count,\r\n    currentPage,\r\n    sort,\r\n    totalPages,\r\n    filters,\r\n    table_columns\r\n}) => {\r\n\r\n    let paginationStart = 0;\r\n    let paginationEnd = 7;\r\n    if (currentPage > 3) {\r\n        paginationStart = currentPage - 3;\r\n        paginationEnd = currentPage + 2;\r\n    }\r\n\r\n    let onChangeCurrentPage = (pageNum) => {\r\n        updateData(pageNum, count, sort, filters, table_columns);\r\n    }\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    if (pages.length > 1) {\r\n        return (\r\n            <div className={style.pagination}>\r\n                <ul className={style.paginationList}>\r\n                    <li \r\n                        className={classnames(style.paginationListItem, {[style.hidden]: currentPage === 1})}\r\n                        onClick={()=> {onChangeCurrentPage(1)}}\r\n                    >\r\n                        ⋘\r\n                    </li>\r\n                    {   \r\n                        pages.slice(paginationStart, paginationEnd).map( page => (\r\n                            <li \r\n                                className={style.paginationListItem + ' ' + (currentPage === page ? style.paginationListItemCurrent : '')}\r\n                                onClick={()=> {onChangeCurrentPage(page)}}\r\n                            >\r\n                                {page}\r\n                            </li>\r\n                        ))\r\n                    }\r\n                    <li \r\n                        className={style.paginationListItem + ' ' + (currentPage === pages.length ? style.hidden : '')}\r\n                        onClick={()=> {onChangeCurrentPage(pages.length)}}\r\n                    >\r\n                        ⋙\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    } else return '';\r\n};\r\n\r\nexport default Pagination;\r\n","export default __webpack_public_path__ + \"static/media/loader.04f3b828.svg\";","import React from 'react';\r\nimport style from './Preloader.module.css'\r\nimport loader from '../../../img/loader.svg';\r\n\r\nlet Preloader = () => {\r\n    return (\r\n        <div className={style.preloader}>\r\n            <img\r\n                src={loader}\r\n                alt=\"Loading...\"\r\n                className={style.preloaderImage}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n","export default __webpack_public_path__ + \"static/media/search-icon.8fc94eca.svg\";","export default __webpack_public_path__ + \"static/media/search-icon-minus.56324d2d.svg\";","import React from 'react';\r\nimport style from './FormControls.module.css';\r\n\r\nconst FromControl = ({\r\n    children, \r\n    formControlProps\r\n}) => {\r\n    return (\r\n        <div className={\r\n            style.formControl + ' ' \r\n            + formControlProps.wrapperClassName\r\n        }>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n\r\n    const formControlProps = {\r\n        inputClassName: props.inputClassName ? props.inputClassName : '',\r\n        wrapperClassName: props.wrapperClassName ? props.wrapperClassName : '',\r\n    }\r\n\r\n    return <FromControl \r\n        {...props} \r\n        formControlProps={formControlProps}\r\n    > \r\n        <textarea {...input} {...restProps} className={formControlProps.inputClassName}/> \r\n    </FromControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n\r\n    const formControlProps = {\r\n        inputClassName: props.inputClassName ? props.inputClassName : '',\r\n        wrapperClassName: props.wrapperClassName ? props.wrapperClassName : '',\r\n    }\r\n\r\n    return <FromControl \r\n        formControlProps={formControlProps}\r\n    > \r\n        <input {...input} {...restProps} className={formControlProps.inputClassName}/> \r\n    </FromControl>\r\n}\r\n","import React from 'react';\r\nimport * as classnames from 'classnames';\r\nimport styles from './FilterModal.module.css';\r\nimport SearchIcon from \"../../../img/search-icon.svg\";\r\nimport SearchIconMinus from \"../../../img/search-icon-minus.svg\";\r\nimport { Button } from '@consta/uikit/Button';\r\nimport { Modal } from '@consta/uikit/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input } from '../FormControls/FormControls';\r\nimport { formSubmitThunkCreator, setFiltersThunkCreator, unsetFiltersThunkCreator } from '../../../redux/reducers/indexReducer';\r\n\r\nconst FilterModalForm = (props) => {\r\n    const onManualSubmitForm = async () => {\r\n        props.formSubmit();\r\n    }\r\n\r\n    return(\r\n        <form className={styles.filterModal}>\r\n            {\r\n                props.fields.map( (field, index) => {\r\n                    if (field.filter) {\r\n                        return(\r\n                            <div className={classnames(\r\n                                styles.modalInputBlock\r\n                            )} key={index}>\r\n                                <div className={classnames(styles.modalInputLabel)}>\r\n                                    {field.label}\r\n                                </div>\r\n                                <div className={classnames(styles.modalInputsList)}>\r\n                                    {\r\n                                        field.type === 'number' \r\n                                        ?\r\n                                            <div className={styles.filterInputsList}>\r\n                                                <Field\r\n                                                    type=\"number\"\r\n                                                    component={Input}\r\n                                                    wrapperClassName={styles.filterFormWrapper}\r\n                                                    inputClassName={classnames(styles.filterFormInput, styles.filterInputNumber)}\r\n                                                    placeholder=\"Равен\"\r\n                                                    name={field.name + '||equal'}\r\n                                                />\r\n                                                <span className={styles.filterInputDelimeter}>\r\n                                                    Или\r\n                                                </span>\r\n                                                <Field\r\n                                                    type=\"number\"\r\n                                                    component={Input}\r\n                                                    wrapperClassName={styles.filterFormWrapper}\r\n                                                    inputClassName={classnames(styles.filterFormInput, styles.filterInputNumber)}\r\n                                                    placeholder=\"От\"\r\n                                                    name={field.name + '||range-from'}\r\n                                                />\r\n                                                <span className={styles.filterInputDelimeter}>\r\n                                                    -\r\n                                                </span>\r\n                                                <Field\r\n                                                    type=\"number\"\r\n                                                    component={Input}\r\n                                                    wrapperClassName={styles.filterFormWrapper}\r\n                                                    inputClassName={classnames(styles.filterFormInput, styles.filterInputNumber)}\r\n                                                    placeholder=\"До\"\r\n                                                    name={field.name + '||range-to'}\r\n                                                />\r\n                                                <span className={styles.filterInputDelimeter}>\r\n                                                    Или\r\n                                                </span>\r\n                                                <Field\r\n                                                    type=\"text\"\r\n                                                    component={Input}\r\n                                                    wrapperClassName={styles.filterFormWrapper}\r\n                                                    inputClassName={styles.filterFormInput}\r\n                                                    placeholder=\"Значения через запятую\"\r\n                                                    name={field.name + '||wherein'}\r\n                                                />\r\n                                            </div>\r\n                                        :\r\n                                            <Field\r\n                                                type=\"text\"\r\n                                                component={Input}\r\n                                                wrapperClassName={styles.filterFormWrapper}\r\n                                                inputClassName={styles.filterFormInput}\r\n                                                placeholder=\"Содержит\"\r\n                                                name={field.name}\r\n                                            />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    else return ''\r\n                })\r\n            }\r\n            <div className={classnames(styles.formFooter)}>\r\n                <Button\r\n                    size=\"m\"\r\n                    view=\"primary\"\r\n                    label=\"Применить\"\r\n                    width=\"default\"\r\n                    className={styles.filterSubmit}\r\n                    onClick={onManualSubmitForm}\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nlet FilterModalReduxForm = reduxForm({\r\n    form: \"filter\",\r\n})(FilterModalForm);\r\n\r\nconst FilterModal = ({\r\n    fields,\r\n    isFiltersUsed,\r\n    formSubmit,\r\n    setFilters,\r\n    unsetFilters,\r\n    sort,\r\n    count,\r\n    usedFilters\r\n}) => {\r\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n    const [isFiltersEmpty, setIsFiltersEmpty] = React.useState(false);\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setIsFiltersEmpty(false);\r\n    }\r\n\r\n    const onSubmit = (form_data) => {\r\n        let form_values = [];\r\n        for (let key in form_data) {\r\n            let name_condition_arr = key.split('||');\r\n            for (let field of fields) {\r\n                if (field.name === name_condition_arr[0]) {\r\n                    form_values.push(key);\r\n                }\r\n            }\r\n        }\r\n        if (form_values.length > 0) {\r\n            setFilters(form_data, fields, sort, count);\r\n            closeModal();\r\n        }\r\n        else {\r\n            setIsFiltersEmpty(true);\r\n        }\r\n    }\r\n\r\n    const onUnsetFilters = () => {\r\n        unsetFilters(sort, count);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img src={SearchIcon} alt=\"\" className=\"searchButton\" onClick={() => setIsModalOpen(true)}/>\r\n            {\r\n                isFiltersUsed \r\n                ? <img src={SearchIconMinus} alt=\"\" className=\"searchButton\" onClick={onUnsetFilters}/>\r\n                : ''\r\n            }\r\n            <Modal\r\n                isOpen={isModalOpen}\r\n                hasOverlay\r\n                onOverlayClick={closeModal}\r\n                className={classnames(styles.modalWindow)}\r\n            >\r\n                <div className={classnames(styles.modalHeader)}>\r\n                    <div className={classnames(styles.modalTitle)}>\r\n                        Фильтр по значениям\r\n                        {\r\n                            isFiltersEmpty ?\r\n                            <div className={styles.modalFiltersEmpty}>\r\n                                Ни один из фильтров не задан\r\n                            </div> : ''\r\n                        }\r\n                    </div>\r\n                    <span className={styles.modalClose} onClick={closeModal}>&times;</span>\r\n                </div>\r\n                <div className={classnames(styles.modalBody)}>\r\n                    <FilterModalReduxForm \r\n                        fields={fields} \r\n                        onSubmit={onSubmit} \r\n                        formSubmit={formSubmit} \r\n                        initialValues={usedFilters}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isFiltersUsed: state.indexReducer.isFiltersUsed,\r\n        fields: state.indexReducer.table_columns,\r\n        count: state.indexReducer.count,\r\n        sort: state.indexReducer.sort,\r\n        usedFilters: state.indexReducer.filters\r\n    }\r\n}\r\n\r\nconst actionCreators = {\r\n    formSubmit: formSubmitThunkCreator,\r\n    setFilters: setFiltersThunkCreator,\r\n    unsetFilters: unsetFiltersThunkCreator,\r\n}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(FilterModal);","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport OrderHistoryContainer from '../OrderHistory/OrderHistoryContainer';\r\nimport './HistoryTableComplex.css';\r\nimport styles from './HistoryTable.module.css';\r\nimport Pagination from '../common/Pagination/Pagination';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport FilterModal from '../common/FilterModal/FilterModal';\r\n\r\nclass HistoryTable extends React.Component {\r\n    changeSort = (e) => {\r\n        const filter = e.target.dataset.sortFilter;\r\n        if (!!filter) {\r\n            const table_name = e.target.dataset.tableName;\r\n            const orderby = e.target.dataset.sortName;\r\n            const orderway = e.target.dataset.sortWay;\r\n\r\n            const sort = {\r\n                table_name: table_name,\r\n                orderby: orderby,\r\n                orderway: orderway,\r\n            }\r\n\r\n            this.props.changeSort(\r\n                sort, \r\n                this.props.current_page, \r\n                this.props.count, \r\n                this.props.filters, \r\n                this.props.table_columns\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isFetching) {\r\n            return (\r\n                <Preloader/>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <div className={classnames(styles.historyTable)}>\r\n                    <div className={styles.tableTop}>\r\n                        <div className={styles.tableTopLabel}>\r\n                            История статусов заказов: <span className={styles.totalCount}>{this.props.total_order_histories}</span>\r\n                        </div>\r\n                        <div className={styles.tableTopActions}>\r\n                            <FilterModal />\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.tableHeader}>\r\n                        {\r\n                            this.props.table_columns.map( (column, index) => {\r\n                                return(\r\n                                    <div className={classnames(\r\n                                        styles.headerCell, \r\n                                        {[styles.headerCellActive]: this.props.sort.orderby === column.name}, \r\n                                        {[styles.lastCell]: this.props.table_columns.length - 1 === index}\r\n                                    )}>\r\n                                        <div \r\n                                            key={index}\r\n                                            className={classnames(styles.headerCellText)}\r\n                                            data-table-name={column.table_name}\r\n                                            data-sort-filter={column.filter ? column.filter : false}\r\n                                            data-sort-name={column.name}\r\n                                            data-sort-way={this.props.sort.orderby === column.name && this.props.sort.orderway === 'ASC' ? 'DESC' : 'ASC' }\r\n                                            onClick={this.changeSort}\r\n                                        >\r\n                                            {column.label}\r\n                                            {\r\n                                                column.filter \r\n                                                ? <div className={classnames(\r\n                                                        styles.sortButton, \r\n                                                        {\r\n                                                            [styles.sortAsc]: this.props.sort.orderby === column.name && this.props.sort.orderway === 'ASC', \r\n                                                            [styles.sortDesc]: this.props.sort.orderby === column.name && this.props.sort.orderway === 'DESC'\r\n                                                        },\r\n                                                    )}\r\n                                                >▼</div> \r\n                                                : ''\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    {\r\n                        this.props.order_histories.length > 0 ?\r\n                        this.props.order_histories.map( (order_history, index) => {\r\n                            return(\r\n                                <OrderHistoryContainer \r\n                                    key={order_history.id}\r\n                                    order_history={order_history} \r\n                                    odd_even={index % 2 === 0? 'even' : 'odd'} \r\n                                />\r\n                            )\r\n                        }) : \r\n                        <div className={styles.tableEmptyRow}>\r\n                            Заказы не найдены\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <Pagination \r\n                    updateData={this.props.updateData}\r\n                    count={this.props.count}\r\n                    currentPage={this.props.current_page}\r\n                    totalPages={this.props.total_pages}\r\n                    sort={this.props.sort}\r\n                    filters={this.props.filters}\r\n                    table_columns={this.props.table_columns}\r\n                />\r\n            </div>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default HistoryTable;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport HistoryTable from './HistoryTable';\r\nimport { updateOrderHistoriesThunkCreator, setSortThunkCreator } from '../../redux/reducers/indexReducer';\r\n\r\nclass HistoryTableApiContainer extends React.Component {\r\n\r\n    onChangeSort = (sort,current_page,count, filters, table_columns) => {\r\n        this.props.changeSort(sort, current_page, count, filters, table_columns);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <HistoryTable \r\n                table_columns={this.props.table_columns}\r\n                filters={this.props.filters}\r\n                order_histories={this.props.order_histories}\r\n                current_page={this.props.current_page}\r\n                total_pages={this.props.total_pages}\r\n                count={this.props.count}\r\n                sort={this.props.sort}\r\n                total_order_histories={this.props.total_order_histories}\r\n                isFetching={this.props.isFetching}\r\n                changeSort={this.onChangeSort}\r\n                updateData={this.props.updateData}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        table_columns: state.indexReducer.table_columns,\r\n        order_histories: state.indexReducer.order_histories,\r\n        current_page: state.indexReducer.current_page,\r\n        total_pages: state.indexReducer.total_pages,\r\n        count: state.indexReducer.count,\r\n        sort: state.indexReducer.sort,\r\n        total_order_histories: state.indexReducer.total_order_histories,\r\n        isFetching: state.indexReducer.isFetching,\r\n        filters: state.indexReducer.filters\r\n    }\r\n}\r\nconst actionCreators = {\r\n    updateData: updateOrderHistoriesThunkCreator,\r\n    changeSort: setSortThunkCreator,\r\n}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(HistoryTableApiContainer);","import React from 'react';\nimport store from \"./redux/reduxStore\";\nimport  { initializeApp } from './redux/reducers/indexReducer';\nimport { connect, Provider } from 'react-redux';\nimport HistoryTableContainer from './componets/HistoryTable/HistoryTableContainer';\nimport Preloader from \"./componets/common/Preloader/Preloader\";\nimport { Theme, presetGpnDefault } from '@consta/uikit/Theme';\n\nclass App extends React.Component {\n\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\n        alert(promiseRejectionEvent.reason);\n    }\n\n    componentDidMount() {\n        const getParams = {\n            'limit': this.props.count,\n            'sort': `[${this.props.sort.table_name}|${this.props.sort.orderby}-${this.props.sort.orderway}]`,\n        }        \n\n        this.props.initializeApp(getParams, this.props.count);\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.isInitialized) {\n            return <Preloader />;\n        }\n        return (\n            <Theme preset={presetGpnDefault}>\n                <HistoryTableContainer />\n            </Theme>\n        );\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        isInitialized: state.indexReducer.initialized,\n        count: state.indexReducer.count,\n        sort: state.indexReducer.sort\n    }\n}\n\nlet actionCreators = {\n    initializeApp: initializeApp,\n}\n\nconst AppContainer =  connect(mapStateToProps, actionCreators)(App);\n\nconst MainApp = (props) => {\n    return (\n        <Provider store={store}>\n            <AppContainer store={store} />\n        </Provider>\n    )\n}\n\nexport default MainApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<MainApp/>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWindow\":\"FilterModal_modalWindow__21aZU\",\"modalHeader\":\"FilterModal_modalHeader__35lj6\",\"modalBody\":\"FilterModal_modalBody__3qvG7\",\"formFooter\":\"FilterModal_formFooter__ixywH\",\"modalTitle\":\"FilterModal_modalTitle__gestM\",\"modalFiltersEmpty\":\"FilterModal_modalFiltersEmpty__kSbi0\",\"modalClose\":\"FilterModal_modalClose__3ReLb\",\"filterSubmit\":\"FilterModal_filterSubmit__14ATG\",\"modalInputBlock\":\"FilterModal_modalInputBlock__nxawJ\",\"modalInputLabel\":\"FilterModal_modalInputLabel__18Wqg\",\"filterFormInput\":\"FilterModal_filterFormInput__3PoTD\",\"filterInputNumber\":\"FilterModal_filterInputNumber__3YWYW\",\"filterInputsList\":\"FilterModal_filterInputsList__UT7Sv\",\"filterInputDelimeter\":\"FilterModal_filterInputDelimeter__32EnJ\"};"],"sourceRoot":""}